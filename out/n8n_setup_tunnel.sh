#!/usr/bin/env bash
set -euo pipefail
# Generated by cyberzard n8n-setup
# Mode: tunnel
# Domain: n8n.example.com
# Timestamp: $(date -u +'%Y-%m-%dT%H:%M:%SZ')
# Edit carefully; re-run generator for changes.


DOMAIN="example.com"
SUBDOMAIN="n8n"
N8N_PORT=5678
DB_PASS='32BY7hreanu55w3dB_YNqAgPyy9Fqzky_6XnJ9U5Q9o'
PROJECT_DIR="$HOME/n8n-stack"
TUNNEL_NAME="n8n-tunnel"

mkdir -p "$PROJECT_DIR/local-files"
cd "$PROJECT_DIR"

echo "[+] Downloading cloudflared package"
curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb -o cloudflared.deb
sudo dpkg -i cloudflared.deb || true
rm -f cloudflared.deb

echo "[!] Run 'cloudflared tunnel login' in another terminal if not already authenticated"
cloudflared tunnel login || true

echo "[+] Creating tunnel"
cloudflared tunnel create $TUNNEL_NAME || true
TUNNEL_UUID=$(cloudflared tunnel list | awk '/n8n-tunnel/ {print $1; exit}')
echo "Tunnel UUID: $TUNNEL_UUID"

echo "[+] Routing DNS"
cloudflared tunnel route dns "$TUNNEL_UUID" "$SUBDOMAIN.$DOMAIN" || true

echo "[+] Writing cloudflared config"
mkdir -p ~/.cloudflared
cat > ~/.cloudflared/config.yml <<EOF
tunnel: $TUNNEL_UUID
credentials-file: ~/.cloudflared/$TUNNEL_UUID.json
ingress:
  - hostname: $SUBDOMAIN.$DOMAIN
    service: http://localhost:$N8N_PORT
  - service: http_status:404
EOF

echo "[+] Starting cloudflared service"
cloudflared service install || true
sudo systemctl enable cloudflared || true
sudo systemctl start cloudflared || true

echo "[+] Writing docker-compose.yml"
cat > docker-compose.yml <<'YAML'
version: '3.8'
services:
    postgres:
        image: postgres:16
        restart: always
        environment:
            POSTGRES_USER: n8n
            POSTGRES_PASSWORD: 32BY7hreanu55w3dB_YNqAgPyy9Fqzky_6XnJ9U5Q9o
            POSTGRES_DB: n8n
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - n8n-net

    n8n:
        image: n8nio/n8n:latest
        restart: always
        ports:
            - "127.0.0.1:5678:5678"
        environment:
            - DB_TYPE=postgresdb
            - DB_POSTGRESDB_HOST=postgres
            - DB_POSTGRESDB_PORT=5432
            - DB_POSTGRESDB_DATABASE=n8n
            - DB_POSTGRESDB_USER=n8n
            - DB_POSTGRESDB_PASSWORD=32BY7hreanu55w3dB_YNqAgPyy9Fqzky_6XnJ9U5Q9o
            - N8N_HOST=n8n.example.com
            - N8N_PORT=5678
            - N8N_PROTOCOL=https
            - WEBHOOK_URL=https://n8n.example.com/
            - NODE_ENV=production
            - GENERIC_TIMEZONE=UTC
            - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
    volumes:
            - n8n_data:/home/node/.n8n
            - ./local-files:/files
        depends_on:
            - postgres
        networks:
            - n8n-net

volumes:
    postgres_data:
    n8n_data:

networks:
    n8n-net:
YAML

docker compose up -d

echo "[âœ“] n8n tunnel setup complete: https://$SUBDOMAIN.$DOMAIN (store DB_PASS securely)"
